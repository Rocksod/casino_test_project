buildscript {
    ext {
        jUnit5Version = '5.5.2'
        selenideVersion='5.11.1'
        webDriverManagerVersion = '3.6.2'
        restAssuredVersion = '4.0.0'
    }
}

plugins {
    id 'io.qameta.allure' version '2.5'
    id 'java'
}

group 'casino'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    maven {
        url "https://dl.bintray.com/qameta/maven"
    }
}

sourceCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

dependencies {
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.16.18'
    implementation "org.junit.jupiter:junit-jupiter:${jUnit5Version}"
    implementation 'org.apache.logging.log4j:log4j-core:2.14.1'
    implementation 'org.apache.logging.log4j:log4j-api:2.14.1'
    testRuntime 'org.junit.platform:junit-platform-launcher:1.4.0'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
    implementation group: 'org.codehaus.jackson', name: 'jackson-mapper-lgpl', version: '1.9.13'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.5'
    implementation group: 'io.rest-assured', name: 'rest-assured', version: "${restAssuredVersion}"
    implementation "io.github.bonigarcia:webdrivermanager:${webDriverManagerVersion}"
    implementation group: 'org.reflections', name: 'reflections', version: '0.9.10'
    implementation "com.codeborne:selenide:${selenideVersion}"
    implementation 'com.google.guava:guava:28.0-jre'
    implementation 'io.github.artsok:rerunner-jupiter:2.1.3'
    testCompile(
            "org.junit.jupiter:junit-jupiter-api:${jUnit5Version}"
    )
    testImplementation(
            "org.junit.jupiter:junit-jupiter-api:${jUnit5Version}"
    )
    testRuntime(
            "org.junit.jupiter:junit-jupiter-engine:${jUnit5Version}",
            "org.junit.jupiter:junit-jupiter-engine:${jUnit5Version}"
    )
    testImplementation(
            'org.junit.jupiter:junit-jupiter-api:5.2.0'
    )
    testRuntimeOnly(
            'org.junit.jupiter:junit-jupiter-engine:5.2.0'
    )
}

apply plugin: "io.qameta.allure"

allure {
    autoconfigure = true
    version = '2.7.0'  // Latest Allure Version

    useJUnit5 {
        version = '2.7.0' // Latest Allure Version
    }
}

defaultTasks 'clean','cleanTest'

test {
    useJUnitPlatform()
}